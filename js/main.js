// ===============================
// üöì ROTAM - Controle de Sess√£o e Token
// ===============================

document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");
  const userInfo = document.getElementById("userInfo");
  const logoutBtn = document.getElementById("logoutBtn");

  // Verifica se h√° token salvo
  if (!token) {
    alert("Sess√£o expirada ou n√£o autenticada. Fa√ßa login novamente.");
    window.location.href = "login.html";
    return;
  }

  try {
    // Decodifica o token (parte payload do JWT)
    const payload = JSON.parse(atob(token.split(".")[1]));
    const exp = payload.exp * 1000; // tempo em ms

    // Verifica expira√ß√£o
    if (Date.now() > exp) {
      alert("Sess√£o expirada. Fa√ßa login novamente.");
      localStorage.removeItem("token");
      window.location.href = "login.html";
      return;
    }

    // Exibe informa√ß√µes b√°sicas
    userInfo.innerHTML = `üëÆ Usu√°rio: <b>${payload.usuario}</b> | Perfil: <b>${payload.role}</b>`;

  } catch (err) {
    console.error("Erro ao decodificar token:", err);
    alert("Erro de autentica√ß√£o. Fa√ßa login novamente.");
    localStorage.removeItem("token");
    window.location.href = "login.html";
  }

  // Bot√£o de logout
  logoutBtn.addEventListener("click", () => {
    localStorage.removeItem("token");
    alert("Voc√™ saiu do sistema.");
    window.location.href = "login.html";
  });
});
